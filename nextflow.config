// Define the required input parameters
conda.enabled = true

params.multiqc_config = "$projectDir/meta/multiqc_config.yaml"
params.organism = "mus_musculus" // organism for reference
params.census_version = "2024-07-01" // version of cellxgene census scvi model and data corpus for reference data
params.ref_keys = ["subclass", "class", "family","global"]  // transferred labels to evaluate
params.subsample_ref = 50 // number of cells per cell type in ref to sample
params.cutoff = 0 // do not threshold class probabilities
params.subset_type="sample" 
params.remove_unknown = true
params.use_gap = false // threshold decision boundary instead of raw probabilities
params.normalization_method="SCT"
params.seed = 42
params.nfeatures = 2000
params.nmads = 5
dag.overwrite = true
params.batch_fields = ["dataset_title", "tissue", "assay"]
// batch keys for scvi integration, must be columns in existing metadata
params.gene_mapping = "/space/grp/rschwartz/rschwartz/cell_annotation_cortex.nf/meta/gemma_genes.tsv"
params.batch_correct = true // integrate seurat references
params.ref_split= "dataset_id" // how to split reference datasets for integration, options: dataset_id, study, or none
params.ref_collections = [
        "A taxonomy of transcriptomic cell types across the isocortex and hippocampal formation",
        "An integrated transcriptomic and epigenomic atlas of mouse primary motor cortex cell types",
        "Tabula Muris Senis"
    ]
params.integration_method = "pcaproject"
params.dims = 50
params.max_features = 200
params.k_anchor = 10 
params.k_score = 30
params.k_weight = 50
params.n_folds = 5 // number of folds for cross-validation
params.outdir_prefix = "${params.census_version}/${params.organism}/${params.ref_split}/${params.normalization_method}/gap_${params.use_gap}"
params.outdir = "$projectDir/${params.outdir_prefix}/ref_${params.subsample_ref}"  // Directory where outputs will be saved
params.color_mapping_file = "/space/grp/rschwartz/rschwartz/nextflow_eval_pipeline/meta/color_mapping.tsv" // color mapping for plots
params.mapping_file = "/space/grp/rschwartz/rschwartz/nextflow_eval_pipeline/meta/census_map_mouse_author.tsv" // author to harmonized label mapping
process {
  cache = 'standard'  // Options: 'standard' (default), 'deep', 'lenient', or 'false'
  executor = 'slurm'
  clusterOptions = '-C thrd64 --cpus-per-task=20'
}
executor {
  queueSize = 90 
}

trace {
  enabled = true
  file = "${params.outdir}/trace.txt"
  overwrite = true
}

nextflow {
  clean {
    afterRun = true  // Default is false; set to true to clean up automatically
  }
}

profiles {
  conda {
    conda.enabled = true
  }

}
